rules:
  - id: hardcoded-secret-in-code
    pattern-either:
      - pattern: |
          $KEY = "..."
      - pattern: |
          $KEY = '...'
    patterns:
      - pattern-either:
          - pattern: $KEY = "..."
          - pattern: $KEY = '...'
      - metavariable-regex:
          metavariable: $KEY
          regex: (?i)(password|passwd|pass|pwd|secret|token|api_key|apikey|auth|credential)
      - pattern-not: $KEY = ""
      - pattern-not: $KEY = "..."
        where: |
          "..." == "example" or
          "..." == "placeholder" or
          "..." == "test" or
          "..." == "dummy" or
          "..." == "sample" or
          "..." == "TODO" or
          "..." == "CHANGEME" or
          "..." == "FIXME"
    message: Potential hardcoded secret found. Use environment variables instead.
    languages: [javascript, typescript]
    severity: ERROR

  - id: sql-injection-risk
    patterns:
      - pattern-either:
          - pattern: |
              $QUERY = `... ${$VAR} ...`
          - pattern: |
              $QUERY = "..." + $VAR + "..."
          - pattern: |
              $QUERY = '...' + $VAR + '...'
      - metavariable-regex:
          metavariable: $QUERY
          regex: (?i)(select|insert|update|delete|drop|create|alter)
    message: Potential SQL injection. Use parameterized queries instead.
    languages: [javascript, typescript]
    severity: ERROR

  - id: unsafe-html-insertion
    pattern-either:
      - pattern: $ELEM.innerHTML = $VAR
      - pattern: document.write($VAR)
      - pattern: $ELEM.outerHTML = $VAR
    message: Potential XSS vulnerability. Sanitize user input before inserting into DOM.
    languages: [javascript, typescript]
    severity: WARNING

  - id: missing-csrf-protection
    patterns:
      - pattern-either:
          - pattern: |
              app.$METHOD("/...", ...)
          - pattern: |
              router.$METHOD("/...", ...)
      - metavariable-regex:
          metavariable: $METHOD
          regex: (post|put|patch|delete)
      - pattern-not-inside: |
          ... = require("csurf")
          ...
      - pattern-not-inside: |
          ... = require("csrf")
          ...
    message: State-changing endpoint without apparent CSRF protection
    languages: [javascript, typescript]
    severity: WARNING

  - id: jwt-weak-secret
    patterns:
      - pattern-either:
          - pattern: jwt.sign(..., "...", ...)
          - pattern: jwt.verify(..., "...", ...)
      - pattern-not: jwt.sign(..., process.env.$VAR, ...)
      - pattern-not: jwt.verify(..., process.env.$VAR, ...)
    message: JWT operations using hardcoded secret. Use environment variables.
    languages: [javascript, typescript]
    severity: ERROR

  - id: insecure-random-generation
    pattern-either:
      - pattern: Math.random()
      - pattern: Date.now()
    message: Math.random() is not cryptographically secure. Use crypto.randomBytes() for security-sensitive operations.
    languages: [javascript, typescript]
    severity: INFO

  - id: path-traversal-risk
    patterns:
      - pattern-either:
          - pattern: fs.readFile($INPUT, ...)
          - pattern: fs.readFileSync($INPUT, ...)
          - pattern: fs.writeFile($INPUT, ...)
          - pattern: fs.writeFileSync($INPUT, ...)
          - pattern: require($INPUT)
      - pattern-not: fs.readFile("...", ...)
      - pattern-not: fs.readFileSync("...", ...)
      - pattern-not: fs.writeFile("...", ...)
      - pattern-not: fs.writeFileSync("...", ...)
    message: Potential path traversal vulnerability. Validate and sanitize file paths.
    languages: [javascript, typescript]
    severity: WARNING

  - id: exec-command-injection
    patterns:
      - pattern-either:
          - pattern: exec($CMD, ...)
          - pattern: execSync($CMD, ...)
          - pattern: spawn($CMD, ...)
          - pattern: spawnSync($CMD, ...)
      - pattern-not: exec("...", ...)
      - pattern-not: execSync("...", ...)
    message: Potential command injection. Avoid dynamic command execution or properly escape inputs.
    languages: [javascript, typescript]
    severity: ERROR

  - id: unsafe-deserialization
    pattern-either:
      - pattern: eval($INPUT)
      - pattern: Function($INPUT)
      - pattern: new Function($INPUT)
    message: Unsafe deserialization/code execution. Avoid eval() and Function constructor with user input.
    languages: [javascript, typescript]
    severity: ERROR

  - id: missing-tls-verification
    patterns:
      - pattern-either:
          - pattern: |
              {
                ...,
                rejectUnauthorized: false,
                ...
              }
          - pattern: process.env.NODE_TLS_REJECT_UNAUTHORIZED = "0"
    message: TLS certificate verification disabled. This allows MITM attacks.
    languages: [javascript, typescript]
    severity: WARNING

  - id: cleartext-transmission
    patterns:
      - pattern: |
          http://...
      - pattern-not: |
          http://localhost...
      - pattern-not: |
          http://127.0.0.1...
    message: Using HTTP instead of HTTPS for external communication
    languages: [javascript, typescript]
    severity: INFO

  - id: exposed-env-file
    patterns:
      - pattern-either:
          - pattern: require("dotenv").config()
          - pattern: dotenv.config()
      - pattern-not-inside: |
          if (...NODE_ENV...) {
            ...
          }
    message: Loading .env file in production code. Ensure this is not done in production.
    languages: [javascript, typescript]
    severity: INFO

  - id: weak-crypto-algorithm
    pattern-either:
      - pattern: crypto.createHash("md5")
      - pattern: crypto.createHash("sha1")
      - pattern: crypto.createCipher(...)
    message: Using weak cryptographic algorithm. Use SHA-256 or higher, and createCipheriv with proper IV.
    languages: [javascript, typescript]
    severity: WARNING

  - id: open-redirect
    patterns:
      - pattern-either:
          - pattern: res.redirect($URL)
          - pattern: window.location = $URL
          - pattern: window.location.href = $URL
      - pattern-not: res.redirect("/...")
      - pattern-not: window.location = "/..."
      - pattern-not: window.location.href = "/..."
    message: Potential open redirect vulnerability. Validate redirect URLs.
    languages: [javascript, typescript]
    severity: WARNING

  - id: missing-security-headers
    patterns:
      - pattern: |
          app.use(...)
      - pattern-not-inside: |
          app.use(helmet())
          ...
    message: Consider using helmet() middleware for security headers
    languages: [javascript, typescript]
    severity: INFO

  - id: unsafe-regex
    patterns:
      - pattern: new RegExp($PATTERN)
      - pattern-not: new RegExp("...")
    message: Dynamic regex creation can lead to ReDoS attacks. Validate regex patterns.
    languages: [javascript, typescript]
    severity: WARNING
